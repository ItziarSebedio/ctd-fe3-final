{"ast":null,"code":"var _jsxFileName = \"/Users/Itziar/Desktop/fe3-final-isebedio/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"light\":\n      return {\n        font: \"black\",\n        background: \"white\"\n      };\n\n    case \"dark\":\n      return {\n        font: \"white\",\n        background: \"black\"\n      };\n\n    case \"llamadaAPI\":\n      return consultarAPI();\n\n    default:\n      return state;\n  }\n} // useEffect(() => {\n//   getData();\n// });\n\n\nexport const initialState = {\n  theme: \"light\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, initialState); //Funciones para el cambio de tema claro/oscuro\n\n  function handleLightTheme() {\n    dispatch({\n      type: \"light\"\n    });\n  }\n\n  function handleDarkTheme() {\n    dispatch({\n      type: \"dark\"\n    });\n  }\n\n  function consultarAPI() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => {\n      return data;\n    }).catch(error => {\n      console.error(\"Error al obtener la imagen: \", error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      handleDarkTheme,\n      handleLightTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","reducer","state","action","type","font","background","consultarAPI","initialState","theme","data","ContextGlobal","undefined","ContextProvider","children","dispatch","handleLightTheme","handleDarkTheme","fetch","then","response","json","catch","error","console"],"sources":["/Users/Itziar/Desktop/fe3-final-isebedio/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"light\":\n      return {\n        font: \"black\",\n        background: \"white\",\n      };\n    case \"dark\":\n      return {\n        font: \"white\",\n        background: \"black\",\n      };\n    case \"llamadaAPI\":\n      return consultarAPI();  \n    default:\n      return state;\n  }\n}\n\n// useEffect(() => {\n//   getData();\n// });\n\nexport const initialState = { theme: \"light\", data: [] };\n\nexport const ContextGlobal = createContext(undefined);\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //Funciones para el cambio de tema claro/oscuro\n  function handleLightTheme() {\n    dispatch({ type: \"light\" });\n  }\n  function handleDarkTheme() {\n    dispatch({ type: \"dark\" });\n  }\n  function consultarAPI() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n      })\n      .catch((error) => {\n        console.error(\"Error al obtener la imagen: \", error);\n      });\n  }\n\n\n  return (\n    <ContextGlobal.Provider value={{ handleDarkTheme, handleLightTheme }}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;EAC9B,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,OAAL;MACE,OAAO;QACLC,IAAI,EAAE,OADD;QAELC,UAAU,EAAE;MAFP,CAAP;;IAIF,KAAK,MAAL;MACE,OAAO;QACLD,IAAI,EAAE,OADD;QAELC,UAAU,EAAE;MAFP,CAAP;;IAIF,KAAK,YAAL;MACE,OAAOC,YAAY,EAAnB;;IACF;MACE,OAAOL,KAAP;EAdJ;AAgBD,C,CAED;AACA;AACA;;;AAEA,OAAO,MAAMM,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBC,IAAI,EAAE;AAAxB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGb,aAAa,CAACc,SAAD,CAAnC;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAM,CAACZ,KAAD,EAAQa,QAAR,IAAoBf,UAAU,CAACC,OAAD,EAAUO,YAAV,CAApC,CAH+C,CAK/C;;EACA,SAASQ,gBAAT,GAA4B;IAC1BD,QAAQ,CAAC;MAAEX,IAAI,EAAE;IAAR,CAAD,CAAR;EACD;;EACD,SAASa,eAAT,GAA2B;IACzBF,QAAQ,CAAC;MAAEX,IAAI,EAAE;IAAR,CAAD,CAAR;EACD;;EACD,SAASG,YAAT,GAAwB;IACtBW,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEST,IAAD,IAAU;MACd,OAAOA,IAAP;IACD,CAJH,EAKGY,KALH,CAKUC,KAAD,IAAW;MAChBC,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;IACD,CAPH;EAQD;;EAGD,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEN,eAAF;MAAmBD;IAAnB,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA7BM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}