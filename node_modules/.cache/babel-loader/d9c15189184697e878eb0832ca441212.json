{"ast":null,"code":"var _jsxFileName = \"/Users/Itziar/Desktop/fe3-final-isebedio/src/Components/utils/global.context.jsx\";\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const [state, dispatch] = useReducer(reducer, initialState);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"light\":\n      return {\n        font: \"black\",\n        background: \"white\"\n      };\n\n    case \"dark\":\n      return {\n        font: \"white\",\n        background: \"black\"\n      };\n\n    default:\n      return state;\n  }\n} //Llamada a la api\n\n\nconst data = async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await res.json();\n};\n\nuseEffect(() => {\n  getData();\n}); //Funciones para el cambio de tema claro/oscuro\n\nfunction handleLightTheme() {\n  dispatch({\n    type: \"light\"\n  });\n}\n\nfunction handleDarkTheme() {\n  dispatch({\n    type: \"dark\"\n  });\n} //\n\n\nexport const initialState = {\n  theme: \"light\",\n  data: []\n}; //\n\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      handleDarkTheme,\n      handleLightTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","state","dispatch","reducer","initialState","action","type","font","background","data","res","fetch","json","getData","handleLightTheme","handleDarkTheme","theme","ContextGlobal","undefined","ContextProvider","children"],"sources":["/Users/Itziar/Desktop/fe3-final-isebedio/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\n\nexport const [state, dispatch] = useReducer(reducer, initialState);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"light\":\n      return {\n        font: \"black\",\n        background: \"white\",\n      };\n    case \"dark\":\n      return {\n        font: \"white\",\n        background: \"black\",\n      };\n    default:\n      return state;\n  }\n}\n\n//Llamada a la api\nconst data = async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await res.json();\n};\n\nuseEffect(() => {\n  getData();\n});\n\n//Funciones para el cambio de tema claro/oscuro\nfunction handleLightTheme() {\n  dispatch({ type: \"light\" });\n}\nfunction handleDarkTheme() {\n  dispatch({ type: \"dark\" });\n}\n\n//\nexport const initialState = { theme: \"light\", data: [] };\n//\nexport const ContextGlobal = createContext(undefined);\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  return (\n    <ContextGlobal.Provider value={{ handleDarkTheme, handleLightTheme }}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;;AAEA,OAAO,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,UAAU,CAACG,OAAD,EAAUC,YAAV,CAApC;;AAEP,SAASD,OAAT,CAAiBF,KAAjB,EAAwBI,MAAxB,EAAgC;EAC9B,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,OAAL;MACE,OAAO;QACLC,IAAI,EAAE,OADD;QAELC,UAAU,EAAE;MAFP,CAAP;;IAIF,KAAK,MAAL;MACE,OAAO;QACLD,IAAI,EAAE,OADD;QAELC,UAAU,EAAE;MAFP,CAAP;;IAIF;MACE,OAAOP,KAAP;EAZJ;AAcD,C,CAED;;;AACA,MAAMQ,IAAI,GAAG,YAAY;EACvB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;EACA,MAAMF,IAAI,GAAG,MAAMC,GAAG,CAACE,IAAJ,EAAnB;AACD,CAHD;;AAKAb,SAAS,CAAC,MAAM;EACdc,OAAO;AACR,CAFQ,CAAT,C,CAIA;;AACA,SAASC,gBAAT,GAA4B;EAC1BZ,QAAQ,CAAC;IAAEI,IAAI,EAAE;EAAR,CAAD,CAAR;AACD;;AACD,SAASS,eAAT,GAA2B;EACzBb,QAAQ,CAAC;IAAEI,IAAI,EAAE;EAAR,CAAD,CAAR;AACD,C,CAED;;;AACA,OAAO,MAAMF,YAAY,GAAG;EAAEY,KAAK,EAAE,OAAT;EAAkBP,IAAI,EAAE;AAAxB,CAArB,C,CACP;;AACA,OAAO,MAAMQ,aAAa,gBAAGnB,aAAa,CAACoB,SAAD,CAAnC;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEL,eAAF;MAAmBD;IAAnB,CAA/B;IAAA,UACGM;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CARM;KAAMD,e"},"metadata":{},"sourceType":"module"}