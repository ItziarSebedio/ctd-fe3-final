{"ast":null,"code":"var _jsxFileName = \"/Users/Itziar/Desktop/fe3-final-isebedio/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\"; // function reducer(state, action) {\n//   switch (action.type) {\n//     case \"light\":\n//       return {\n//         font: \"black\",\n//         background: \"white\",\n//       };\n//     case \"dark\":\n//       return {\n//         font: \"white\",\n//         background: \"black\",\n//       };\n//     default:\n//       return state;\n//   }\n// }\n//Llamada a la api\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const dentistas = async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await res.json();\n  return data;\n}; // useEffect(() => {\n//   getData();\n// });\n//\n\nexport const initialState = {\n  theme: \"light\",\n  data: []\n}; //\n\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, initialState); // //Funciones para el cambio de tema claro/oscuro\n  // function handleLightTheme() {\n  //   dispatch({ type: \"light\" });\n  // }\n  // function handleDarkTheme() {\n  //   dispatch({ type: \"dark\" });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","dentistas","res","fetch","data","json","initialState","theme","ContextGlobal","undefined","ContextProvider","children","state","dispatch","reducer"],"sources":["/Users/Itziar/Desktop/fe3-final-isebedio/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\n\n\n\n// function reducer(state, action) {\n//   switch (action.type) {\n//     case \"light\":\n//       return {\n//         font: \"black\",\n//         background: \"white\",\n//       };\n//     case \"dark\":\n//       return {\n//         font: \"white\",\n//         background: \"black\",\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n//Llamada a la api\nexport const dentistas = async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await res.json();\n  return data;\n};\n\n// useEffect(() => {\n//   getData();\n// });\n\n\n\n//\nexport const initialState = { theme: \"light\", data: [] };\n//\nexport const ContextGlobal = createContext(undefined);\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // //Funciones para el cambio de tema claro/oscuro\n// function handleLightTheme() {\n//   dispatch({ type: \"light\" });\n// }\n// function handleDarkTheme() {\n//   dispatch({ type: \"dark\" });\n// }\n\n\n  return (\n    <ContextGlobal.Provider>\n    {/* <ContextGlobal.Provider value={{ handleDarkTheme, handleLightTheme }}> */}\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,MAAMC,SAAS,GAAG,YAAY;EACnC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;EACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;EACA,OAAOD,IAAP;AACD,CAJM,C,CAMP;AACA;AACA;AAIA;;AACA,OAAO,MAAME,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBH,IAAI,EAAE;AAAxB,CAArB,C,CACP;;AACA,OAAO,MAAMI,aAAa,gBAAGV,aAAa,CAACW,SAAD,CAAnC;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACc,OAAD,EAAUR,YAAV,CAApC,CAH+C,CAK/C;EACF;EACA;EACA;EACA;EACA;EACA;;EAGE,oBACE,QAAC,aAAD,CAAe,QAAf;IAAA,UAEGK;EAFH;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CApBM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}